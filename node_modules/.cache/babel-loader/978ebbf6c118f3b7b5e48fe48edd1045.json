{"ast":null,"code":"var _jsxFileName = \"/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song); //asi cambiamos el estado a la cancion que fue clicada\n    //add active state\n\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { //devuelve la cancion entera pero cambia el active a true\n          ...song,\n          active: true\n        };\n      }\n\n      return { //devuelve la cancion entera pero cambia el active a false\n        ...song,\n        active: false\n      };\n    }); //definimos el state para el array que hemos creado con el map\n\n    setSongs(newSongs); //check if the song is playing\n\n    if (isPlaying) audioRef.current.play();\n  }; //si la cancion esta active se a単ade la clase selected y sino no se a単ade nada\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","songs","song","setCurrentSong","id","audioRef","isPlaying","setSongs","songSelectHandler","newSongs","map","active","current","play","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,cAHmB;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,QALmB;AAMnBC,EAAAA,SANmB;AAOnBC,EAAAA;AAPmB,CAAD,KAQd;AACJ,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAML,cAAc,CAACD,IAAD,CAApB,CADoC,CACR;AAC5B;;AACA,UAAMO,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAWR,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL;AACA,aAAGF,IAFE;AAGLS,UAAAA,MAAM,EAAE;AAHH,SAAP;AAKD;;AACD,aAAO,EACL;AACA,WAAGT,IAFE;AAGLS,QAAAA,MAAM,EAAE;AAHH,OAAP;AAKD,KAbgB,CAAjB,CAHoC,CAiBpC;;AACAJ,IAAAA,QAAQ,CAACE,QAAD,CAAR,CAlBoC,CAmBpC;;AACA,QAAIH,SAAJ,EAAeD,QAAQ,CAACO,OAAT,CAAiBC,IAAjB;AAChB,GArBD,CADI,CAuBJ;;;AACA,sBACE;AACE,IAAA,OAAO,EAAEL,iBADX;AAEE,IAAA,SAAS,EAAG,gBAAeN,IAAI,CAACS,MAAL,GAAc,UAAd,GAA2B,EAAG,EAF3D;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAET,IAAI,CAACY,IAAf;AAAqB,MAAA,GAAG,EAAEZ,IAAI,CAACa;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKb,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKZ,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;KAAMhB,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song); //asi cambiamos el estado a la cancion que fue clicada\n    //add active state\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          //devuelve la cancion entera pero cambia el active a true\n          ...song,\n          active: true,\n        };\n      }\n      return {\n        //devuelve la cancion entera pero cambia el active a false\n        ...song,\n        active: false,\n      };\n    });\n    //definimos el state para el array que hemos creado con el map\n    setSongs(newSongs);\n    //check if the song is playing\n    if (isPlaying) audioRef.current.play();\n  };\n  //si la cancion esta active se a単ade la clase selected y sino no se a単ade nada\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}