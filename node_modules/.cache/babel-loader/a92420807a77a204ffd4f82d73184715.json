{"ast":null,"code":"var _jsxFileName = \"/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying\n}) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song); //asi cambiamos el estado a la cancion que fue clicada\n    //check if the song is playing\n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play(); //si el audio aun no se haya cargado (es undefined), espera un poquiro\n\n      if (playPromise !== undefined) {\n        //cuando se cargue la cancion se da play, le damos play\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  }; //si la cancion esta active se a単ade la clase selected y sino no se a単ade nada\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","songs","song","setCurrentSong","id","audioRef","isPlaying","songSelectHandler","playPromise","current","play","undefined","then","audio","active","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,cAHmB;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,QALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAMC,iBAAiB,GAAG,MAAM;AAC9BJ,IAAAA,cAAc,CAACD,IAAD,CAAd,CAD8B,CACR;AACtB;;AACA,QAAII,SAAJ,EAAe;AACb,YAAME,WAAW,GAAGH,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,EAApB,CADa,CAEb;;AACA,UAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC7B;AACAH,QAAAA,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;AAC1BR,UAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAjB;AACD,SAFD;AAGD;AACF;AACF,GAbD,CADI,CAeJ;;;AACA,sBACE;AACE,IAAA,OAAO,EAAEH,iBADX;AAEE,IAAA,SAAS,EAAG,gBAAeL,IAAI,CAACY,MAAL,GAAc,UAAd,GAA2B,EAAG,EAF3D;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEZ,IAAI,CAACa,IAAf;AAAqB,MAAA,GAAG,EAAEb,IAAI,CAACc;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKd,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKb,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnCD;;KAAMjB,W;AAqCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n}) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song); //asi cambiamos el estado a la cancion que fue clicada\n    //check if the song is playing\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      //si el audio aun no se haya cargado (es undefined), espera un poquiro\n      if (playPromise !== undefined) {\n        //cuando se cargue la cancion se da play, le damos play\n        playPromise.then((audio) => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n  //si la cancion esta active se a単ade la clase selected y sino no se a単ade nada\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}