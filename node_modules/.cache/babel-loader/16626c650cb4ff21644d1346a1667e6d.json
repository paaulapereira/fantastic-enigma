{"ast":null,"code":"var _jsxFileName = \"/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  id\n}) => {\n  const songSelectHandler = () => {\n    //filtramos todo el state de las canciones para que encuentre solo la que estanos haciendo click\n    const selectedSong = songs.filter(state => state.id === id); //filter devuelve un array\n\n    setCurrentSong(selectedSong[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: \"library-song\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/pereirapaula/Desktop/curso react/music-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","songs","song","setCurrentSong","id","songSelectHandler","selectedSong","filter","state","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAD,KAAyC;AAC3D,QAAMC,iBAAiB,GAAG,MAAM;AAC9B;AACA,UAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAArC,CAArB,CAF8B,CAEiC;;AAC/DD,IAAAA,cAAc,CAACG,YAAY,CAAC,CAAD,CAAb,CAAd;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,OAAO,EAAED,iBAAd;AAAiC,IAAA,SAAS,EAAC,cAA3C;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACO,IAAf;AAAqB,MAAA,GAAG,EAAEP,IAAI,CAACQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKR,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKP,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;KAAMX,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({ songs, song, setCurrentSong, id }) => {\n  const songSelectHandler = () => {\n    //filtramos todo el state de las canciones para que encuentre solo la que estanos haciendo click\n    const selectedSong = songs.filter((state) => state.id === id); //filter devuelve un array\n    setCurrentSong(selectedSong[0]);\n  };\n\n  return (\n    <div onClick={songSelectHandler} className=\"library-song\">\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}