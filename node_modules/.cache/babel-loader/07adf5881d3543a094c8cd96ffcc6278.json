{"ast":null,"code":"var _jsxFileName = \"/Users/pereirapaula/Desktop/curso react/music-player/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\"; //importar componentes\n\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\"; //importar estilos\n\nimport \"./styles/app.scss\"; //importar musicas\n\nimport data from \"./songsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false); //referencias\n\n  const audioRef = useRef(null); //audio de la cancion\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler //cuando se carga la informacion del audio ya empieza\n      ,\n      onLoadedMetadata: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iN+lkj4FIn8PEr/FblQZSrg2uN8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pereirapaula/Desktop/curso react/music-player/src/App.js"],"names":["React","useState","useRef","Player","Song","Library","data","App","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","timeUpdateHandler","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,IAAI,EAAL,CAAlC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CAJa,CAKb;;AACA,QAAMa,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB,CANa,CAMkB;;AAC/B,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEQ;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEI,QADZ;AAEE,MAAA,SAAS,EAAEF,SAFb;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,WAAW,EAAEH;AAJf;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,KAAhB;AAAuB,MAAA,cAAc,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AACE,MAAA,YAAY,EAAEI,iBADhB,CAEE;AAFF;AAGE,MAAA,gBAAgB,EAAEA,iBAHpB;AAIE,MAAA,GAAG,EAAED,QAJP;AAKE,MAAA,GAAG,EAAEJ,WAAW,CAACM;AALnB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1BQT,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\n//importar componentes\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\n//importar estilos\nimport \"./styles/app.scss\";\n//importar musicas\nimport data from \"./songsList\";\n\nfunction App() {\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //referencias\n  const audioRef = useRef(null); //audio de la cancion\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n      />\n      <Library songs={songs} setCurrentSong={setCurrentSong} />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        //cuando se carga la informacion del audio ya empieza\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}